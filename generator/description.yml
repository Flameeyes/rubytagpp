# kate: encoding UTF-8; remove-trailing-space on; replace-trailing-space-save on; space-indent on; indent-width 2;
#
# RubyTag++ TagLib bindings
# Copyright (C) 2006, Diego "Flameeyes" Petten√≤
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
{
  bindings: "rubytagpp",
  includes: [
    "<taglib/taglib.h>",
    "<taglib/tag.h>",
    "<taglib/id3v1tag.h>",
    "<taglib/id3v2tag.h>",
    "<taglib/xiphcomment.h>",
    "<taglib/apetag.h>",
    "<taglib/tfile.h>",
    "<taglib/flacfile.h>",
    "<taglib/mpcfile.h>",
    "<taglib/mpegfile.h>",
    "<taglib/oggfile.h>",
    "<taglib/oggflacfile.h>",
    "<taglib/vorbisfile.h>",
    "<taglib/vorbisproperties.h>",
    "<taglib/fileref.h>",
    "<tlist.h>",
    "<id3v2frame.h>",
    "<textidentificationframe.h>",
    "<attachedpictureframe.h>",
    "<commentsframe.h>",
    "<relativevolumeframe.h>",
    "<uniquefileidentifierframe.h>",
    "<unknownframe.h>"
  ],
  namespaces: [
    { name: "TagLib",
      classes: [
        { name: "AudioProperties",
          methods: [
            { name: "length", return: "int" },
            { name: "bitrate", return: "int" },
            { name: "sampleRate", return: "int" },
            { name: "channels", return: "int" }
          ]
        },
        { name: "File",
          methods: [
            { name: "name", return: "char*" },
            { name: "tag", return: "Tag*" },
            { name: "save", return: "bool" },
            { name: "readOnly", return: "bool", aliases: [ "readOnly?", "read_only?" ] },
            { name: "isOpen", return: "bool", aliases: [ "open?" ] },
            { name: "isValid", return: "bool", aliases: [ "valid?" ] },
            { name: "audioProperties", return: "TagLib::AudioProperties" }
          ]
        },
        { name: "Tag",
          attributes: {
            "title": { funcget: "title", funcset: "setTitle", type: "String" },
            "artist": { funcget: "artist", funcset: "setArtist", type: "String" },
            "album": { funcget: "album", funcset: "setAlbum", type: "String" },
            "comment": { funcget: "comment", funcset: "setComment", type: "String" },
            "genre": { funcget: "genre", funcset: "setGenre", type: "String" },
            "year": { funcget: "year", funcset: "setYear", type: "uint" },
            "track": { funcget: "track", funcset: "setTrack", type: "uint" }
          },
          methods: [
            { name: "isEmpty", return "bool" }
          ]
        },
        { name: "FileRef",
          methods: [
            { name: "FileRef",
              params: [
                {name: "fileName", type: "char*"},
                {name: "readProperties", type: "bool", optional: "yes"},
                {name: "propertiesStyle", type: "TagLib::AudioProperties::ReadStyle", optional: "yes" }
              ]
            },
            { name: "tag", return: "TagLib::Tag" },
            { name: "audioProperties", return: "TagLib::AudioProperties" },
            { name: "file", return: "TagLib::File" },
            { name: "isNull", return: "bool", aliases: [ "null?" ] },
            { name: "save", return: "bool" }
          ]
        }
      ]
    },
    { name: "TagLib::FLAC",
      classes: [
        { name: "File",
          parent: "TagLib::File",
          methods: [
            { name: "File",
              params: [
                {name: "file", type: "char*"},
                {name: "readProperties", type: "bool", optional: "yes"},
                {name: "propertiesStyle", type: "TagLib::AudioProperties::ReadStyle", optional: "yes" }
              ]
            },
            { name: "ID3v2Tag",
              return: "TagLib::ID3v2::Tag",
              params: [ {name: "create", type: "bool", optional: "yes"} ]
            },
            { name: "ID3v1Tag",
              return: "TagLib::ID3v1::Tag",
              params: [ {name: "create", type: "bool", optional: "yes"} ]
            },
            { name: "xiphComment",
              return: "TagLib::Ogg::XiphComment",
              params: [ {name: "create", type: "bool", optional: "yes"} ]
            }
          ]
        }
      ]
    },
    { name: "TagLib::ID3v2",
      classes: [
        { name: "Frame",
          methods: [
            { name: "size", return: "uint" },
            { name: "setText", aliases: [ "text=" ],
              params: [ {name: "text", type: "String"} ]
            },
            { name: "toString",
              aliases: [ "text", "to_s" ]
            }
          ]
        },
        { name: "TextIdentificationFrame",
          parent: "TagLib::ID3v2::Frame",
          methods: [
            { name: "fieldList", return: "StringList" }
          ]
        },
        { name: "UserTextIdentificationFrame",
          parent: "TagLib::ID3v2::TextIdentificationFrame"
        },
        { name: "UniqueFileIdentifierFrame",
          parent: "TagLib::ID3v2::Frame"
        },
        { name: "AttachedPictureFrame",
          parent: "TagLib::ID3v2::Frame"
        },
        { name: "CommentsFrame",
          parent: "TagLib::ID3v2::Frame"
        },
        { name: "RelativeVolumeFrame",
          parent: "TagLib::ID3v2::Frame"
        },
        { name: "UnknownFrame",
          parent: "TagLib::ID3v2::Frame"
        },
        { name: "Header",
          methods: [
            { name: "majorVersion", return: "uint" },
            { name: "revisionNumber", return: "uint" },
            { name: "unsynchronisation", return: "bool" },
            { name: "extendedHeader", return: "bool" },
            { name: "experimentalIndicator", return: "bool" },
            { name: "footerPresent", return: "bool" },
            { name: "tagSize", return: "uint" },
            { name: "completeTagSize", return: "uint" },
            { name: "setTagSize", params: [ {name: "s", type: "uint"} ] }
          ]
        },
        { name: "Tag",
          parent: "TagLib::Tag",
          methods: [
            { name: "frameList", return: "FrameList" },
            { name: "frameListMap", return: "FrameListMap" },
            { name: "header", return: "Header*" }
          ]
        }
      ]
    },
    { name: "TagLib::ID3v1",
      classes: [
        { name: "Tag",
          parent: "TagLib::Tag"
        }
      ]
    },
    { name: "TagLib::APE",
      classes: [
        { name: "Tag",
          parent: "TagLib::Tag"
        }
      ]
    },
    { name: "TagLib::Ogg",
      classes: [
        { name: "File",
          parent: "TagLib::File"
        },
        { name: "XiphComment",
          parent: "TagLib::Tag",
          methods: [
            { name: "addField",
              return: "void", params: [
                {name: "key", type: "String"},
                {name: "value", type: "String"},
                {name: "replace", type: "bool"}
              ]
            },
            { name: "fieldListMap", return: "FieldListMap" }
          ]
        }
      ]
    },
    { name: "TagLib::Vorbis",
      classes: [
        { name: "Properties",
          parent: "TagLib::AudioProperties",
          methods: [
            { name: "vorbisVersion", return: "int" },
            { name: "bitrateMaximum", return: "int" },
            { name: "bitrateNominal", return: "int" },
            { name: "bitrateMinimum", return: "int" }
          ]
        }
      ]
    },
    { name: "TagLib::Ogg::Vorbis",
      classes: [
        { name: "File",
          parent: "TagLib::Ogg::File",
          methods: [
            { name: "File",
              params: [
                {name: "file", type: "char*"},
                {name: "readProperties", type: "bool", optional: "yes"},
                {name: "propertiesStyle", type: "TagLib::AudioProperties::ReadStyle", optional: "yes" }
              ]
            },
            { name: "audioProperties", return: "TagLib::Vorbis::Properties" }
          ]
        }
      ]
    },
    { name: "TagLib::Ogg::FLAC",
      classes: [
        { name: "File",
          parent: "TagLib::Ogg::File",
          methods: [
            { name: "File",
              params: [
                {name: "file", type: "char*"},
                {name: "readProperties", type: "bool", optional: "yes"},
                {name: "propertiesStyle", type: "TagLib::AudioProperties::ReadStyle", optional: "yes" }
              ]
            }
          ]
        }
      ]
    },
    { name: "TagLib::MPEG",
      classes: [
        { name: "File",
          parent: "TagLib::File",
          methods: [
            { name: "File",
              params: [
                {name: "file", type: "char*"},
                {name: "readProperties", type: "bool", optional: "yes"},
                {name: "propertiesStyle", type: "TagLib::AudioProperties::ReadStyle", optional: "yes" }
              ]
            },
            { name: "save",
              return: "bool",
              params: [
                {name: "tags", type: "int", optional: "yes"},
                {name: "stripOthers", type: "bool", optional: "yes"}
              ]
            },
            { name: "strip",
              params: [
                {name: "tags", type: "int", optional: "yes"},
                {name: "freeMemory", type: "bool", optional: "yes"}
              ]
            },
            { name: "ID3v2Tag",
              return: "TagLib::ID3v2::Tag",
              params: [ {name: "create", type: "bool", optional: "yes"} ]
            },
            { name: "ID3v1Tag",
              return: "TagLib::ID3v1::Tag",
              params: [ {name: "create", type: "bool", optional: "yes"} ]
            },
            { name: "APETag",
              return: "TagLib::APE::Tag",
              params: [ {name: "create", type: "bool", optional: "yes"} ]
            }
          ]
        }
      ]
    },
    { name: "TagLib::MPC",
      classes: [
        { name: "File",
          parent: "TagLib::File"
        }
      ]
    }
  ]
}
